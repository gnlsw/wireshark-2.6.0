commit 0f06bf5e25
Author: Guy Harris <guy@alum.mit.edu>
Date:   Tue Apr 24 01:32:22 2018 -0700

    Strengthen the heuristcs that check for "alternate" pcap formats.
    
    Try to read up to 3 pcap records, making the value a #define so that we
    can crank it up if necessary.
    
    Bug: 14595
    Change-Id: Ie9d62a1763fe7d1d46fdd8781691ea975770f3d7
    Reviewed-on: https://code.wireshark.org/review/27111
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 967f51e3aff69edf581fae41f0078b1056567c3c)
    Reviewed-on: https://code.wireshark.org/review/27112

commit 653215743a
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Mon Apr 23 23:54:43 2018 +0200

    TLS13: add draft-27 and draft-28 version numbers
    
    TLS 1.3 draft 26 up to 28 are purely editorial, but since QUIC draft-11
    will actually use the latest TLS 1.3 draft, add these versions. See
    https://github.com/quicwg/base-drafts/wiki/5th-Implementation-Draft
    
    Bug: 12779
    Change-Id: I31316afa900c4b085caeed2529b388617211bff7
    Reviewed-on: https://code.wireshark.org/review/27108
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 84149ab769d1ff7c5bbef4118ec62e57b0f09127)
    Reviewed-on: https://code.wireshark.org/review/27110

commit 6ae751dbe0
Author: chinarulezzz <alexandr.savca89@gmail.com>
Date:   Mon Apr 23 21:44:29 2018 +0300

    fix link speed indication
    
    Change-Id: I01351f6b4693ef5135c508124bce2d0aff8c8208
    Reviewed-on: https://code.wireshark.org/review/27102
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 40de0010bb302a8dedd3d4ad6aa75da8f27a297c)
    Reviewed-on: https://code.wireshark.org/review/27104

commit 645db15bba
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 22 20:31:26 2018 -0700

    Add more bounds checks.
    
    If the calculated packet length in the header is bigger than the actual
    packet length value from the header, reject the packet.
    
    Change-Id: I86cb24c66ee0d6fd2ed6f9240d44c1adc5f0bf91
    Reviewed-on: https://code.wireshark.org/review/27087
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 83ecd467765408847afe6e5acdd7ab974c621f6e)
    Reviewed-on: https://code.wireshark.org/review/27088

commit c28fabc8c5
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 22 16:45:39 2018 -0700

    Fix more indentation.
    
    Change-Id: I76aa377c5db4c94c5cee40913d67863dd10d1498
    Reviewed-on: https://code.wireshark.org/review/27084
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 4f492559c6994334976e4c6e9f94f928ddc4b970)
    Reviewed-on: https://code.wireshark.org/review/27085

commit a3d74af4e3
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 22 15:04:51 2018 -0700

    Fix indentation.
    
    Change-Id: I18a748cbe58e7ca1a7b17fa84c6d464913c216ff
    Reviewed-on: https://code.wireshark.org/review/27082
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 3e39ec64e4cdd092c93c5b281fffa7bf90d843e6)
    Reviewed-on: https://code.wireshark.org/review/27083

commit 3f6fd3c761
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 22 08:36:17 2018 +0000

    [Automatic update for 2018-04-22]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I5256c64a5cd30d6bec58bb307170c9c67c276217
    Reviewed-on: https://code.wireshark.org/review/27073
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit f4dc81049e
Author: Ivan Nardi <nardi.ivan@gmail.com>
Date:   Tue Apr 17 17:53:42 2018 +0200

    TCP: improve handling of unknown TCP options
    
    Create protocol sub-tree, allow filtering for unknown/unsupported TCP options.
    
    Change-Id: I9f51e3ac83e2fa97756a9f3a43f8cd2e15949e67
    Reviewed-on: https://code.wireshark.org/review/27020
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    (cherry picked from commit 79014a50c3f7f06f4e0513c887e4cb1e85edf61c)
    Reviewed-on: https://code.wireshark.org/review/27047
    Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit f1f6d5126f
Author: Guy Harris <guy@alum.mit.edu>
Date:   Fri Apr 20 09:46:58 2018 -0700

    Fix cpu_diag_eventid_fix_names table.
    
    For a value_string_ext, the values must be in numerical order.
    
    Change-Id: I43063b59a8c15d7d1fcdca07d4ae9fd89917427d
    Reviewed-on: https://code.wireshark.org/review/27058
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit ccf495a8382bf62f8f90d1239dddb7c536aeface)
    Reviewed-on: https://code.wireshark.org/review/27059

commit 84750b2a15
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Thu Apr 19 12:37:50 2018 +0200

    Qt: fix invalid member access within expert info dialog
    
    Opening a context menu in the expert dialog resulted in an UBSAN warning
    because ExpertInfoModel::data is invoked with a proxy model index. Rely
    on the proxy to perform this mapping (change filterActionTriggered to
    avoid direct model access while at it).
    
    Change-Id: Id399f44b954b87d7d4dd0341fbedb391ab1b13da
    Fixes: v2.5.0rc0-1966-gb0112e60ad ("Add a model to use for Expert Info dialog.")
    Reviewed-on: https://code.wireshark.org/review/27025
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Roland Knall <rknall@gmail.com>
    (cherry picked from commit 01a32a54a01a5711ebef0850830aed9fc9d657f6)
    Reviewed-on: https://code.wireshark.org/review/27045
    Petri-Dish: Roland Knall <rknall@gmail.com>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit 6c1f13bbf2
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Thu Apr 19 12:58:18 2018 +0200

    DNS: fix inverted condition for filtering error packets in stats
    
    Change-Id: I9d867992e4f10c056c6070f0eb1aa0c8bb7cf117
    Fixes: v2.5.2rc0-72-ga055e3c299 ("dns: skip stats if packet is within icmp.")
    Reviewed-on: https://code.wireshark.org/review/27026
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Dario Lombardo <lomato@gmail.com>
    (cherry picked from commit 9da25bc16fe6b0a8bbfc18b16bab036eb060fd1b)
    Reviewed-on: https://code.wireshark.org/review/27031
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>

commit 09997bd533
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Apr 18 15:46:00 2018 -0700

    Fix tapo.
    
    Change-Id: I1e5a39437e274aa8923e996241d2264dbd63e806
    Reviewed-on: https://code.wireshark.org/review/27014
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit d5c4c6972ed019e1cf52d268baecd41726760b90)
    Reviewed-on: https://code.wireshark.org/review/27015

commit e11375a0da
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Apr 18 11:56:54 2018 -0700

    Try to fix dist.
    
    Change-Id: I50631af2861a84c9789e28f56e283bebe050f2df
    Reviewed-on: https://code.wireshark.org/review/27011
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 928756732d
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Wed Apr 18 12:37:20 2018 +0200

    Qt: expose CaptureEvent definition for MOC
    
    All WiresharkDialog instances have a "captureEvent(CaptureEvent)" method
    that requires the definition of "CaptureEvent" from capture_file.h.
    By luck, this definition is available for CMake builds due to the
    generated MOC headers being included in the right order, but this cannot
    be relied on. On an autotools build with less luck:
    
        main_status_bar.moc.cpp: In static member function ‘static void MainStatusBar::qt_static_metacall(QObject*, QMetaObject::Call, int, void**)’:
        main_status_bar.moc.cpp:241:86: error: invalid use of incomplete type ‘class CaptureEvent’
                 case 28: _t->captureEventHandler((*reinterpret_cast< CaptureEvent(*)>(_a[1]))); break;
    
    Create a new header file to limit exposure of the CaptureFile class.
    
    Change-Id: I4ab609f13b9438797e39e7b98f367da35536979b
    Fixes: v2.9.0rc0-186-g57bf7e4347 ("Qt: Fix memory leak for CaptureEvent")
    Reviewed-on: https://code.wireshark.org/review/27003
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Reviewed-by: Roland Knall <rknall@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit ad71a9154040bce496bb959c7c7b73f63aed97ef)
    Reviewed-on: https://code.wireshark.org/review/27004
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit 94e1c82f88
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Tue Apr 17 17:49:17 2018 +0200

    dfilter: require spaces as set element separator
    
    Previously a filter such as `http.request.method in {"GET"HEAD""}` would
    be parsed as three strings (GET, HEAD and an empty string). As it seems
    more likely that people make typos rather than intending to construct
    such a filter, forbid this by always requiring a whitespace separator.
    
    Change-Id: I77e531fd6be072f62dd06aac27f856106c8920c6
    Reported-by: Stig Bjørlykke
    Reviewed-on: https://code.wireshark.org/review/26989
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 6a45dcd7a2ab695aade66499cdb61406a2196429)
    Reviewed-on: https://code.wireshark.org/review/27000
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 7a16851204
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Mon Apr 16 13:02:41 2018 +0200

    dfilter: make spaces around ".." optional in display filter
    
    For numeric values such as port numbers, "4430..4434" looks more
    natural than "4430 .. 4434", so support that.
    
    To make this possible, the display filter syntax needs to be restricted.
    Assume that neither field names nor values can contain "..". The display
    filter `data contains ..` will now be considered a syntax error and must
    be written as `data contains ".."` instead. More generally, all values
    that contain ".." must be quoted.
    
    Other than the ".." restriction, the scanner deliberately accepts more
    characters that can potentially form invalid input. This is to prevent
    accidentally splitting input in multiple tokens.  For example, "9.2." in
    "frame.time_delta in {9.2.}" is currently parsed as one token and then
    rejected because it cannot be parsed as time. If the scanner was made
    stricter, it could treat it as two tokens (floats), "9." and "2." which
    has different meaning for the set membership operator.
    
    An unhandled edge case is "1....2" which is parsed as "1 .. ..  2" but
    could have been parsed as "1. .. .2" instead. A float with trailing dots
    followed by ".." seems sufficiently weird, so rejection is fine.
    
    Ping-Bug: 14180
    Change-Id: Ibad8e851b49346c9d470f09d5d6a54defa21bcb9
    Reviewed-on: https://code.wireshark.org/review/26960
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 699ee5dc529cc2be8a3d1721e506471321fdbc74)
    Reviewed-on: https://code.wireshark.org/review/26999
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>

commit c46bc41d8d
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Sat Apr 14 18:07:22 2018 +0200

    dfilter: add range support to set membership operator ("f in {x .. y}")
    
    Allow "tcp.srcport in {1662 1663 1664}" to be abbreviated to
    "tcp.srcport in {1662 .. 1664}". The range operator is supported for any
    field value which supports the "<=" and "=>" operators and thus works
    for integers, IP addresses, etc.
    
    The naive mapping "tcp.srcport >= 1662 and tcp.srcport <= 1664" is not
    used because it does not have the intended effect with fields that have
    multiple occurrences (e.g. tcp.port). Each condition could be satisfied
    by an other value. Therefore a new DVFM instruction (ANY_IN_RANGE) is
    added to test the range condition against each individual field value.
    
    Bug: 14180
    Change-Id: I53c2d0f9bc9d4f0ffaabde9a83442122965c95f7
    Reviewed-on: https://code.wireshark.org/review/26945
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 1ff82572ca62096520d0c6529fcc0ecee518206d)
     [Peter: resolved release notes conflicts by appending the entry]
    Reviewed-on: https://code.wireshark.org/review/26998
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>

commit df466ccf82
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Tue Apr 17 16:23:31 2018 +0200

    Qt: fix remaining CaptureEvent signal connections
    
    Converted all remaining "CaptureEvent *" to "CaptureEvent" using:
    
        sed -e 's/CaptureEvent *\*/CaptureEvent/g' $(git grep -le 'CaptureEvent *\*') -i
    
    Change-Id: I328d2890ec3b5e6672fa3fab22e85063e8309574
    Fixes: v2.9.0rc0-186-g57bf7e4347 ("Qt: Fix memory leak for CaptureEvent")
    Reviewed-on: https://code.wireshark.org/review/26985
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Reviewed-by: Roland Knall <rknall@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    (cherry picked from commit f2aa1cbdec5f5534cdbc1c4b6cb4ffd7da368eae)
    Reviewed-on: https://code.wireshark.org/review/26987

commit 465bc34445
Author: Harald Welte <laforge@gnumonks.org>
Date:   Sun Apr 8 00:51:31 2018 +0200

    lapdm: Hand B4 frames into a dissector supporting L2 pseudo-length
    
    B4 frames have no length octet at L2 level, but instead a L2 pseudo
    length octet at L3.  We must call the proper dissector for decoding
    them, and gsm_a_ccch supports L2 pseudo length.
    
    This addresses the LAPDm side of
    https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=14105
    
    Ping-Bug: 14105
    Change-Id: I5743dc6153a1adae60b8d9564f345861edc3fca4
    Reviewed-on: https://code.wireshark.org/review/26798
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit 3dab804250ad4c648438fb23a107d74b51f4480f)
    Reviewed-on: https://code.wireshark.org/review/26983

commit 0ec408a85b
Author: Harald Welte <laforge@gnumonks.org>
Date:   Sun Apr 8 00:23:37 2018 +0200

    rsl: Fix treatment of SACCH FILL / SACCH INFO MODIFY
    
    The RSL SACCH INFO MODIFY / RSL SACCH FILL messages contain a
    SI5 / SI6 / SI5bis / SI5ter message.  Those SI are (like the SI on CCCH)
    sent as UI frame in downlink direction.  Since Phase 2, the "L2
    pseudo-length field is part of the L3 message, and not stripped /
    interpreted at L2.
    
    3GPP TS 44.006 states that a special B4 frame format is used on the
    SACCH downlink for UI frames, which is basically a normal B frame, but
    with no length field at L2, shifting the length field into L3 where it
    becomes the L2 pseudo-length.
    
    From RSL, we need to call a variant of the RR dissector that is able to
    decode a L3 message that includes a L2 pseudo-length.  This is,
    paradoxically, not the "gsm_a_sacch" dissector, as that one is only used
    for B-frames, i.e. actual LAPDm ABM frames.  We must use the "gsm_a_ccch"
    dissector.
    
    See also the discussion in
    https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=14105
    as well as https://lists.osmocom.org/pipermail/openbsc/2017-December/011545.html
    and https://osmocom.org/issues/3059 for further background information.
    
    Ping-Bug: 14105
    Change-Id: Icdad2b7698d5d7d613cacceec6a3d848b946306c
    Reviewed-on: https://code.wireshark.org/review/26797
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 91e0de19c921b91401421b06bd2b90cdbe1c7166)
    Reviewed-on: https://code.wireshark.org/review/26981

commit 15b05f6aeb
Author: Roland Knall <rknall@gmail.com>
Date:   Wed Mar 28 10:04:50 2018 +0200

    Qt: Fix memory leak for CaptureEvent
    
    Make the argument to the events a non-memory object
    
    Cherry-Picked before merge, due to massive changes in master
    
    Change-Id: I46d8c24415aa2bc48b2a2d3b1fccffa6956d08b5
    Reviewed-on: https://code.wireshark.org/review/26979
    Reviewed-by: Roland Knall <rknall@gmail.com>
    Petri-Dish: Roland Knall <rknall@gmail.com>
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit 7c7de0354d
Author: ruengeler <ruengeler@wireshark.org>
Date:   Tue Apr 17 11:44:20 2018 +0200

    Qt: Fix segfault bug when analysing SCTP packets
    
    Change-Id: Id444318621ffa61ee5edb84d40de372e8b7f60ef
    Fixes: v2.5.2rc0-26-gecda3d0901 ("tap-sctp: remove guint32 unneeded allocations.")
    Reviewed-on: https://code.wireshark.org/review/26977
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Dario Lombardo <lomato@gmail.com>
    (cherry picked from commit febaa4f119458c3754580d9c847da13c458345be)
    Reviewed-on: https://code.wireshark.org/review/26980
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>

commit 63636ec64c
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Mon Apr 16 15:36:41 2018 +0200

    Forbid leading, duplicated and trailing dots in field names
    
    In order to simplify the display filter scanner, try to restrict the use
    of dots ('.') in field names. Forbid leading dots, does not affect
    current dissectors. Fix '..' typo in fpp dissector and forbid it. Forbid
    trailing dots after fixing dissectors: some of them just have an excess
    dot, others are missing a name after the dot.
    
    Change-Id: I6e58a04ef0306ee8c16fbf6a3cabb076d7fc69c9
    Reviewed-on: https://code.wireshark.org/review/26967
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit ccff21854d5e340af3e8db3ecde555a20ce1f7d8)
    Reviewed-on: https://code.wireshark.org/review/26975
    Petri-Dish: Anders Broman <a.broman58@gmail.com>

commit e7c9dd0687
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Thu Apr 12 19:55:04 2018 +0200

    ssl: fix duplicate dissections with multiple PDUs in a stream
    
    The previous fix was incomplete and would still result in duplicate PDU
    dissections starting from the second reassembled PDU in a TLS stream.
    The reason for that is that "nxtseq" is the absolute offset within a TLS
    application data stream where the current segment ends while the
    reassembled PDU length ("ipfd_head->datalen") is likely smaller than
    "nxtseq".
    
    Note: this fix assumes that the there won't be another (partial) PDU
    following a reassembled PDU in a single packet (that is, the condition
    "nxtseq > msp->nxtpdu" is assumed not to occur). If that is not the
    case, a different issue occurs which needs another fix (more work):
    "Reassembly error, protocol SSL: Frame already added in first pass".
    
    Change-Id: Ib546f6e85baa0670c2c6a31ee8de87422004ecf3
    Bug: 14596
    Fixes: v2.1.0rc0-1521-gcefd1d4910 ("ssl: avoid duplicate PDU dissections")
    Reviewed-on: https://code.wireshark.org/review/26935
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit f9ed58759fca787b6d3b4c2a988d714014b5ddc6)
    Reviewed-on: https://code.wireshark.org/review/26971
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit 5a274e5684
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Apr 11 13:35:18 2018 +0200

    Qt: Do not show MaxMind DB path when not enabled
    
    The About dialog should not show MaxMind DB path when built without
    the MaxMind DB resolver.
    
    Change-Id: Id5b51628a04005fc4dcaacea26abb3a0ddee9b66
    Reviewed-on: https://code.wireshark.org/review/26887
    Reviewed-by: Roland Knall <rknall@gmail.com>
    Petri-Dish: Roland Knall <rknall@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>

commit cee362ad21
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 15 16:34:37 2018 +0000

    [Automatic update for 2018-04-15]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I5e7e0c02a75907ce42066c978976530e9a0c0cab
    Reviewed-on: https://code.wireshark.org/review/26954
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 3ab69e0c67
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Wed Apr 11 15:33:33 2018 +0200

    x509ce: fix display of IPAddress when it is an IPv6 Address
    
    According to RFC 5280 (Section 4.2.1.6. Subject Alternative Name), an
    iPAddress can be either four (IPv4) or sixteen octets (IPv6).
    
    Bug: 14603
    Change-Id: I6894f78c8e3f2a1b10940379397c87bbf981d4d6
    Reviewed-on: https://code.wireshark.org/review/26891
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Roland Knall <rknall@gmail.com>
    (cherry picked from commit 4fab4f678cd013c1b552be2cfd0b75425b4e17ee)
    Reviewed-on: https://code.wireshark.org/review/26939

commit 91b653e205
Author: Martin Kaiser <wireshark@kaiser.cx>
Date:   Tue Apr 10 16:54:23 2018 +0800

    qt: capture file properties: add a splitter
    
    Add a splitter to the capture file properties dialog. This allows for
    modifying the relative sizes of the details vs comment boxes. People who
    paste lots of text into the capture file comment may want a lager box
    for it.
    
    Change-Id: Id79d9f5fd7e589a2ba88aa5f16b52bb37d7c47ae
    Reviewed-on: https://code.wireshark.org/review/26845
    Petri-Dish: Martin Kaiser <wireshark@kaiser.cx>
    Reviewed-by: Roland Knall <rknall@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Martin Kaiser <wireshark@kaiser.cx>
    (cherry picked from commit f59be5cd53017317967658b5d7cdce847b50970b)
    Reviewed-on: https://code.wireshark.org/review/26916

commit d8277d6464
Author: Filip Sohajek <filip.sohajek@gmail.com>
Date:   Mon Apr 9 20:06:52 2018 +0200

    Netlink: Add rtnetlink attribute dissecting
    
    This patch adds dissecting of several attributes in RTM_NEWLINK and
    RTM_NEWADDR.
    
    Change-Id: Iab476e7439a9bcbc25e70cded67bc371788baec4
    Reviewed-on: https://code.wireshark.org/review/26830
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 205505d9c82237676dfbae29cc53dd851713e702)
    Reviewed-on: https://code.wireshark.org/review/26934
    Petri-Dish: Jaap Keuter <jaap.keuter@xs4all.nl>
    Reviewed-by: Roland Knall <rknall@gmail.com>

commit 405174cff2
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Apr 12 17:56:51 2018 -0700

    Fix the length of the payload of a private_1 or audio PES packet.
    
    The length field's value doesn't include the length of the length field
    itself.
    
    Change-Id: Icd0cc2721a32212296929d248b9305b0f4a051e6
    Reviewed-on: https://code.wireshark.org/review/26920
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 05615015057f13197d5694c426bccccfa7de5f5f)
    Reviewed-on: https://code.wireshark.org/review/26921

commit 8ce0426ae6
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Apr 11 22:01:11 2018 -0700

    Update a comment.
    
    We don't just reassemble DOCSIS MAC frames, we reassemble other forms of
    higher-level packet atop an MPEG Transport Stream as well.
    
    Change-Id: If6e709a8d2d3e574fbaedb1fcac74797c5664aa5
    Reviewed-on: https://code.wireshark.org/review/26905
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit d0d0cf05cc6872c7d49f1ed7b2432ba97a66331f)
    Reviewed-on: https://code.wireshark.org/review/26906

commit e461fb3c0e
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Apr 11 19:27:57 2018 -0700

    Need to flag a variable as volatile, due to the use of exceptions.
    
    The exception mechanism is setjmp/longjmp-based, so we need to mark
    offset as volatile, otherwise the longjmp might not restore its value.
    
    Change-Id: Ib63070bbbbe1f16a93cb58aa7ee5ef2a5488df8a
    Reviewed-on: https://code.wireshark.org/review/26901
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 148f39d900b516cac575d7de689a44545a663c70)
    Reviewed-on: https://code.wireshark.org/review/26902

commit 45967eb3b8
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Apr 11 17:45:46 2018 -0700

    If a subdissector throws an exception, catch it and continue.
    
    That way, some exception thrown higher in the protocol stack doesn't
    stop us from dissecting the next TSP.
    
    Change-Id: Ib756e5d62806caf0edd4e4ded18bb94000653d39
    Reviewed-on: https://code.wireshark.org/review/26897
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 81f184bc00b938807cfdee72dc6f8d49412e26c6)
    Reviewed-on: https://code.wireshark.org/review/26898

commit a2b2504114
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Tue Apr 10 17:11:24 2018 +0200

    NBSS: take into account snaplen when creating the TVB subset
    
    Otherwise you can trigger an exception interrupting the packet dissection
    when the snaplen defined is shorter than the payload length
    
    Bug: 14598
    Change-Id: Ibeb6482495ed67c7669574bdcd7c429523318428
    Reviewed-on: https://code.wireshark.org/review/26858
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Martin Kaiser <wireshark@kaiser.cx>
    (cherry picked from commit 526a328d839cebf8d52dfcfdd479f12e83a28d3a)
    Reviewed-on: https://code.wireshark.org/review/26881

commit 5f1fbb2386
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Apr 11 09:48:02 2018 +0200

    user_encap: Avoid a hash lookup to get dissector name
    
    The dissector handle is already known so it's no need to fetch
    this again using find_dissector().
    
    Change-Id: Id48066ab881f2b80ec9e3a6e86bc1e41f32cd1ec
    Reviewed-on: https://code.wireshark.org/review/26873
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>
    (cherry picked from commit b79d2bc9a32a6c23426cb2da824b766ad69bbee8)
    Reviewed-on: https://code.wireshark.org/review/26874

commit 41d303e5f0
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Apr 11 09:22:13 2018 +0200

    extcap: Fix crash in extcap_verify_capture_filter
    
    This fixes a regression issue from g57fed5d1 when freeing the
    arguments passed to extcap.
    
    Change-Id: Ic4d6a129569f9e691fd2608e0229342b8b5e9783
    Reviewed-on: https://code.wireshark.org/review/26870
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>
    (cherry picked from commit 89904b61332e01f69cb9951238eed4ba57e95399)
    Reviewed-on: https://code.wireshark.org/review/26872

commit dc589bf7cb
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Apr 9 14:34:00 2018 +0200

    user_encap: Copy all user_encap_t values
    
    Copy all values for user_encap_t in user_copy_cb() when duplicating
    an entry in the DLT User table.
    
    Change-Id: Ic695a6213e12d42b62c2a0614c7f598e57833cdf
    Reviewed-on: https://code.wireshark.org/review/26827
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit cbed2a2148c73adad5819b8077a9775368bca131)
    Reviewed-on: https://code.wireshark.org/review/26854

commit f216f19565
Author: Roland Knall <rknall@gmail.com>
Date:   Mon Apr 9 17:39:49 2018 +0800

    Qt: Fix MacOSX menu entries
    
    Remove various menu items added automatically on Mac OS X. The following
    menu items have been removed:
    
    - Edit / Start Dictation
    - View / Enter Fullscreen Mode
    - View / Show Tab Bar - Hide Tab Bar
    
    Bug: 13366
    Change-Id: Ifb83bcd7c46a397fc54202f2137436672071f316
    Reviewed-on: https://code.wireshark.org/review/26823
    Petri-Dish: Roland Knall <rknall@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Roland Knall <rknall@gmail.com>
    Reviewed-on: https://code.wireshark.org/review/26828

commit e39e046cf6
Author: Adrian Granados <adrian@adriangranados.com>
Date:   Mon Apr 9 16:21:27 2018 -0400

    ieee80211: fixes min and max power values in item text (they are signed).
    
    This change further extends the fix for bug 14593 by making sure the
    values min, max values shown in the item's info text match the
    item's children values.
    
    Change-Id: Ibac39e1f21a892a02753c3cf1604ed3b14eadc52
    Reviewed-on: https://code.wireshark.org/review/26832
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit e085119b66722eeeaa409b65e5cbb7053e171841)
    Reviewed-on: https://code.wireshark.org/review/26835

commit 9303d8502b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sat Apr 7 13:36:31 2018 +0800

    ws_pipe: Zero an array.
    
    Make sure we zero-initialize pipeinsts, otherwise ConnectNamedPipe will
    have indeterminate behavior according to the MSDN documentation for the
    OVERLAPPED structure.
    
    Change-Id: I38d9680cf01b0a8f9e566a85a7a330f6c0aa9a48
    Ping-Bug: 14532
    Reviewed-on: https://code.wireshark.org/review/26784
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit ffe2f138ab62c48467645a953fb0617bf2f1b39b)
    Reviewed-on: https://code.wireshark.org/review/26813

commit d0da2d5670
Author: Martin Kaiser <wireshark@kaiser.cx>
Date:   Sat Mar 31 19:03:10 2018 +0200

    main window: don't keep a dangling freeze_focus_ pointer
    
    Without this fix, Wireshark crashes when the user presses Ctrl-D or
    selects Edit / Ignore Packet and the current focus is somewhere on the
    bytes view.
    
    To ignore a packet, we protect the actual ignore operation by calling
    main window's freeze and thaw methods. We save a pointer freeze_focus_,
    pointing to the widget that has the focus, and restore the focus during
    thaw.
    
    This causes a crash if the focused widget is part of ByteViewTab.
    Ignoring the packet causes a redissection, the ByteViewTab and its
    children are cleared. freeze_focus_ remains non-NULL but doesn't point
    to a valid QWdiget any more. Calling freeze_focus_->setFocus() crashes.
    
    Fix this by using a QPointer<QWdiget> for freeze_focus_. The pointer is
    then reset to NULL when the QWdiget that it points to goes out of scope.
    
    Change-Id: Icc1f71a9de971284c628b7815a7fc1a5cc0d5fe2
    Reviewed-on: https://code.wireshark.org/review/26693
    Reviewed-by: Martin Kaiser <wireshark@kaiser.cx>
    Petri-Dish: Martin Kaiser <wireshark@kaiser.cx>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    Reviewed-by: Roland Knall <rknall@gmail.com>
    (cherry picked from commit f0fed342165145461ed88358d2fc8985d15f3745)
    Reviewed-on: https://code.wireshark.org/review/26816
    Petri-Dish: Roland Knall <rknall@gmail.com>

commit 088e084438
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 8 16:09:10 2018 -0700

    Mark some fields as being in units of dBm.
    
    Fix some formats to print unsigned values with %u while we're at it.
    
    Change-Id: If4a8793c77d4fbff0dd19f17e31cd18107db02ba
    Reviewed-on: https://code.wireshark.org/review/26810
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 90a00e1971f6ab86c30ae6856569a383b0e2fa9e)
    Reviewed-on: https://code.wireshark.org/review/26811

commit 13ec9be94c
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 8 13:15:48 2018 -0700

    No need to display *signed* power values in hex.
    
    Change-Id: I8356dc3c2667a7bd55d3bb75b88f7ed758cecb72
    Reviewed-on: https://code.wireshark.org/review/26807
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 510a1b1c0726240f10f65368f9a57d99573781ac)
    Reviewed-on: https://code.wireshark.org/review/26808

commit aa870635e9
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 8 12:51:17 2018 -0700

    Max and min transmit power, in the Power Capabilities IE, are signed.
    
    To quote IEEE Std 802.11-2016, section 9.4.2.15 "Power Capability
    element":
    
      The Minimum Transmit Power Capability field is set to the nominal
      minimum transmit power with which the STA is capable of transmitting in
      the current channel, with a tolerance B1 5 dB.  The field is coded as a
      signed integer in units of decibels relative to 1 mW. Further
      interpretation of this field is defined in 11.8.4.
    
      The Maximum Transmit Power Capability field is set to the nominal
      maximum transmit power with which the STA is capable of transmitting in
      the current channel, with a tolerance B1 5 dB. The field is coded as a
      signed integer in units of decibels relative to 1 mW.  Further
      interpretation of this field is defined in 11.8.4.
    
    Bug: 14593
    Change-Id: Ibc4e4a11d71ac1894d03d33f5762a7b0d1d70085
    Reviewed-on: https://code.wireshark.org/review/26804
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit bf3bd0a0af6c1b5e1db8b934f387a5261ee418c4)
    Reviewed-on: https://code.wireshark.org/review/26805

commit cc60fa8834
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Sat Apr 7 22:35:35 2018 +0200

    mqtt: Add option to uncompress message when decoding
    
    Add support for uncompressing message data before dissecting
    based on topic.
    
    Bug: 14591
    Change-Id: Ibaead205a4df791d8e903935dfd29b9b8c13ddc5
    Reviewed-on: https://code.wireshark.org/review/26794
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Reviewed-by: Christopher Maynard <Christopher.Maynard@gtech.com>
    Tested-by: Petri Dish Buildbot
    (cherry picked from commit d44241488460f06342bb8ea97415b21dd147b7d1)
    Reviewed-on: https://code.wireshark.org/review/26803
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 4b8ae7e67d
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 8 08:26:30 2018 +0000

    [Automatic update for 2018-04-08]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Iebff3934c2c58543bd65c32f1edb08b97ab906f5
    Reviewed-on: https://code.wireshark.org/review/26800
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit dc23633313
Author: Harald Welte <laforge@gnumonks.org>
Date:   Wed Mar 21 19:42:46 2018 +0100

    BSSMAP: Fix definition of Speech Version Indication for EFR (FR2)
    
    3GPP TS 48.008 Section 3.2.2.11 is quite clear on the definitions
    of the "permitted speech version indication".
    
    The Wireshark BSSMAP dissector so far got it wrong:
    * 0x11 is "Full Rate Version 2" (aka GSM-EFR)
    * the short version is not FR12 but FR2
    
    Change-Id: I6835083389e465c791cea5a240ebc434f677b82c
    Reviewed-on: https://code.wireshark.org/review/26790
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit 5b0c6f9e058bb07df970956f01f0e15d1ed15af6)
    Reviewed-on: https://code.wireshark.org/review/26791

commit 73a5b4d2c0
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Sat Apr 7 12:56:45 2018 +0200

    extcap: Always use byte mode in pipes
    
    The original PipeMode parameter to CreateNamedPipe() was wrong but
    when running gave a correct value. The changes in g00373a1f tried to fix
    this parameter but this gave incorrect values.
    
    Bug: 14532
    Change-Id: Ia1e8e9ba54abfcc3bd0856fd715b7c69ee54ccfe
    Reviewed-on: https://code.wireshark.org/review/26786
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>
    (cherry picked from commit 5d1b5648fa900319fc4d212f2fd78562959716ba)
    Reviewed-on: https://code.wireshark.org/review/26788

commit 569ab414c5
Author: Darius Davis <darius@vmware.com>
Date:   Wed Apr 4 09:06:20 2018 +1000

    Tweak ws_cpuid so that Valgrind is happy.
    
    Valgrind considers the "cpuid" instruction to always depend on inputs from eax
    and ecx, even though it's only a subset of values of eax for which ecx is
    relevant.  If ecx is undefined when cpuid is executed, the outputs of cpuid
    will be considered undefined.
    
    Instead of suppressing the resulting uninitialised-value warning (the
    suppression for which is now out-of-date anyway, now that
    register_all_protocols is moved to a worker thread), let's simply set ecx to
    zero in ws_cpuid.
    
    Testing done: Built Wireshark on Linux amd64.  Before this change, running
       "tools/valgrind-wireshark.sh ./test/captures/dhcp.pcap" with
       valgrind-3.12.0.SVN on Debian 9.4 amd64 would yield the following Valgrind
       error:
    
       ==2416== Thread 2:
       ==2416== Conditional jump or move depends on uninitialised value(s)
       ==2416==    at 0xACB8B22: ws_mempbrk_sse42_compile (ws_mempbrk_sse42.c:58)
       ==2416==    by 0x74F4960: register_all_protocols_worker (register.c:37)
       ==2416==    by 0xB1403D4: g_thread_proxy (gthread.c:784)
       ==2416==    by 0xD438493: start_thread (pthread_create.c:333)
       ==2416==    by 0xB4CAACE: clone (clone.S:97)
    
       With the change, the above message is gone.  Inspected the disassembly of
       function ws_cpuid, and it looks sane -- just an added "xor ecx, ecx" at the
       top.
    
    Change-Id: I2fb382309cac234c400286a6e9fac7d922912c63
    Reviewed-on: https://code.wireshark.org/review/26733
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 5c2eade45d733433bfa5e513950b28819faa8751)
    Reviewed-on: https://code.wireshark.org/review/26783
    Reviewed-by: Guy Harris <guy@alum.mit.edu>

commit c3c972747f
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Thu Apr 5 21:13:26 2018 +0200

    SIP: Fix handling of response time
    
    Set p_val->request_time when we set p_val->frame_number so that
    response time matches request frame.
    
    Bug: 14551
    Change-Id: I5f8dd9405b9b1eb61a1ca184b15d3fdc436546e1
    Reviewed-on: https://code.wireshark.org/review/26762
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 58debae7149666d7ed7629908edcbe44ac2423b6)
    Reviewed-on: https://code.wireshark.org/review/26768

commit e8c1b50994
Author: Pascal Quantin <pascal.quantin@gmail.com>
Date:   Thu Apr 5 22:00:58 2018 +0200

    RLC-NR: fix bearerType and bearerId length
    
    Change-Id: Ib328c9ad60f22d68c0978d77d759dec0c879d41f
    Reviewed-on: https://code.wireshark.org/review/26765
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit 271e27af6d45302f6e340dafb2da04f18400801a)
    Reviewed-on: https://code.wireshark.org/review/26766

commit 3b839ae4b9
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Apr 5 11:48:01 2018 -0700

    Don't install PortAudio if we're not installing GTK+.
    
    Change-Id: I99bad59b34ff0688cf527ae69b5e48e4c14e7380
    Reviewed-on: https://code.wireshark.org/review/26758
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit c4da7ed843527ac75bc46d74e43de1b61fa5c5f5)
    Reviewed-on: https://code.wireshark.org/review/26759

commit 7072a8aa0c
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Wed Apr 4 21:21:48 2018 +0200

    Transifex don't like dot
    
    Change-Id: I14ef2c1b9e0a02c0eadc6f542b146c3727a438a4
    Reviewed-on: https://code.wireshark.org/review/26743
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit b8ad0997fe
Author: Roland Knall <roland.knall@br-automation.com>
Date:   Wed Apr 4 12:40:23 2018 +0200

    extcap: Move extcap_foreach to a GList
    
    Allow for a higher flexibility of the arguments passed to extcap_foreach
    
    Change-Id: I19708ac9d6c2aceecd88d0f691b5155bb8027675
    Reviewed-on: https://code.wireshark.org/review/26736
    Petri-Dish: Roland Knall <rknall@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Roland Knall <rknall@gmail.com>
    (cherry picked from commit 57fed5d17fa22340fde76cabe2b5340ad48a1989)
    Reviewed-on: https://code.wireshark.org/review/26741

commit cf4a195cef
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon Apr 2 18:03:30 2018 -0700

    If we're reading from a string, don't fclose yyin.
    
    yyin is initialized to stdin.  When we're reading from files, we set it
    so that it points to the FILE from which we're reading, but when we're
    reading from a string, we don't set it, leaving it to point to stdin.
    
    This means that, just as the "read from the input" routine has to be set
    differently when reading from a file or a string, the "close the current
    input" routine has to be set differently as well.
    
    Bug: 14577
    Change-Id: Ie05880775612867e9037ace2de0cd0a0dd2fabb5
    Reviewed-on: https://code.wireshark.org/review/26719
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 9d87f607ee2ecefaff71f2ab3f2dc3d2dc185399)
    Reviewed-on: https://code.wireshark.org/review/26720

commit 746c87bc7f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Apr 2 18:47:47 2018 +0000

    GTK+: Switch to the production splash image.
    
    Change-Id: I771d53b5ca3cb86d74253ae89be2e2c11eb47d13
    Reviewed-on: https://code.wireshark.org/review/26710
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 50aa9a17e1
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Apr 2 12:42:21 2018 -0700

    CMake: Add a version to our Windows library directory.
    
    Change-Id: Ibccee5dd0a3efbe253b6c727db2f6b9461d51b20
    Reviewed-on: https://code.wireshark.org/review/26714
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit ed7616d66e
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon Apr 2 13:21:39 2018 -0700

    Pick up some compiler-specific flags from autotools.
    
    Bug: 14554
    Change-Id: Idf4585671ad2698bd51f65abadb1b1000ad56445
    Reviewed-on: https://code.wireshark.org/review/26716
    Reviewed-by: Guy Harris <guy@alum.mit.edu>
    (cherry picked from commit 29973ebeb68b1025ebe95bebb55239bf9221f428)
    Reviewed-on: https://code.wireshark.org/review/26717

commit 85e664a8e1
Author: Eric Wang <terminal_0@aol.com>
Date:   Mon Apr 2 10:50:38 2018 +0800

    LPP: fix NRSRQ display
    
    according to 3gpp 36133v1404, nrsrq value ranges from -34db to 2.5db
    according to 3gpp 36355v1404, nrsrq reporting value ranges from 0 to 74
    
    Change-Id: Ie5cc9880526ba6919785a8e355178ac08b34a1a0
    Reviewed-on: https://code.wireshark.org/review/26707
    Petri-Dish: Pascal Quantin <pascal.quantin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
    (cherry picked from commit 2f18a32864a80b43abd8517cea360447a82fa690)
    Reviewed-on: https://code.wireshark.org/review/26715
